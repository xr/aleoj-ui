{"version":3,"sources":["components/aleoj/editor/index.js","config.js","components/aleoj/description/index.js","components/aleoj/submission/index.js","components/aleoj/problems/index.js","components/aleoj/about/index.js","components/aleoj/header/index.js","components/aleoj/footer/index.js","views/Aleoj/index.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","code","setCode","value","options","mode","theme","keyMap","lineNumbers","autoCloseBrackets","dragDrop","indentUnit","tabSize","onBeforeChange","editor","data","API_URL","process","Description","problemId","useState","problem","setProblem","err","setErr","useEffect","a","axios","result","message","fetchData","intent","icon","title","className","plugins","gfm","children","description","statusMap","Submission","solutions","setSolutions","fetchSolutions","isCorrect","status","isWA","error","time","memory","Math","ceil","case","expect","actual","length","map","solution","Date","timestamp","toLocaleDateString","language","author","id","Problems","close","onChoose","problems","setProblems","history","useHistory","onClick","push","tag","About","props","isOpen","show","canOutsideClickClose","onClose","toggle","Classes","DIALOG_BODY","href","target","rel","Header","Group","align","Alignment","LEFT","Heading","RIGHT","Divider","toggleAbout","Footer","onProblemsClick","onSubmitClick","isSubmiting","text","loading","disabled","defaultCodeTmp","AleojView","tabId","setTabId","showDrawer","toggleProblems","showAbout","setSubmiting","setResult","useParams","payload","problem_id","post","response","gutterSize","minSize","renderActiveTabPanelOnly","animate","selectedTabId","onChange","panel","panelClassName","position","parseInt","App","exact","path","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a0991c7.chunk.js","sourcesContent":["import 'codemirror/lib/codemirror.css';\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/mode/clike/clike.js';\nimport 'codemirror/addon/edit/closebrackets';\nimport './index.css';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport React from 'react';\n\n\n\nfunction Editor({ code, setCode }) {\n    return <CodeMirror\n        value={code}\n        options={{\n            mode: \"text/x-c++src\",\n            theme: 'monokai',\n            keyMap: 'sublime',\n            lineNumbers: true,\n            autoCloseBrackets: true,\n            dragDrop: false,\n            indentUnit: 2,\n            tabSize: 2\n        }}\n        onBeforeChange={(editor, data, value) => {\n            setCode(value);\n        }}\n    />\n}\n\nexport default Editor;","const API_URL = process.env.REACT_APP_API_URL;\n\nexport {\n    API_URL\n};","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Callout } from '@blueprintjs/core';\nimport axios from 'axios';\nimport { Spinner } from '@blueprintjs/core';\nimport { API_URL } from '../../../config';\nimport gfm from 'remark-gfm';\nimport './index.css';\n\nfunction Description({ problemId }) {\n    const [problem, setProblem] = useState(null);\n    const [err, setErr] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const result = await axios(\n                    `${API_URL}/problems/${problemId}`,\n                );\n                setProblem(result.data);\n            } catch (e) {\n                setErr(e.message);\n            }\n\n        };\n\n        fetchData();\n    }, [problemId])\n\n    if (err != null) {\n        return <Callout intent=\"danger\" icon=\"error\" title={err} className=\"bp3-dark\" />\n    }\n\n    return problem ?\n        <ReactMarkdown plugins={[gfm]} children={problem.description} />\n        : <Spinner />\n\n}\n\nexport default Description;","import React, { useState, useEffect } from 'react';\nimport { Callout, Icon } from '@blueprintjs/core';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport './index.css';\n\nconst statusMap = {\n    \"TLE\": \"Time Limit Exceeded\",\n    \"MLE\": \"Memory Limit Exceeded\",\n    \"RE\": \"Runtime Error\",\n    \"WA\": \"Wrong Answer\",\n    \"ACE\": \"Accepted\",\n    \"ERR\": \"Error\"\n}\n\nfunction Submission({ result, problemId }) {\n    const [solutions, setSolutions] = useState([])\n\n    useEffect(() => {\n        const fetchSolutions = async () => {\n            const result = await axios(\n                `${API_URL}/solutions?problem_id=${problemId}&page=1&per=10`,\n            );\n            setSolutions(result.data);\n        };\n\n        fetchSolutions();\n    }, [problemId]);\n\n    const isCorrect = result.status === 'ACE';\n    const isWA = result.status === 'WA';\n    return <div>\n        {result.status && <Callout intent={isCorrect ? 'success' : 'danger'} icon={isCorrect ? 'tick' : 'error'} title={statusMap[result.status]} className=\"bp3-dark submission-result\" >\n            {result.error && <code className=\"submission-code\">{result.error}</code>}\n            {result.time && <div>Runtime: <strong>{result.time} ms </strong> </div>}\n            {result.memory && <div>Memory Usage: <strong>{Math.ceil(result.memory / 1024)} KB </strong></div>}\n            {\n                isWA && < div >\n                    <code className=\"submission-code\">Case: {result.case}</code>\n                    <code className=\"submission-code\">Expect: {result.expect}</code>\n                    <code className=\"submission-code\">Got: {result.actual}</code>\n                </div>\n            }\n        </Callout>\n        }\n        <br />\n\n        {solutions.length && <table className=\"aleoj-submission-table bp3-html-table bp3-html-table-bordered bp3-html-table-striped bp3-dark\">\n            <thead>\n                <tr>\n                    <th>Time Submitted</th>\n                    <th>Status</th>\n                    <th>Runtime</th>\n                    <th>Memory</th>\n                    <th>Language</th>\n                    <th>Author</th>\n                </tr>\n            </thead>\n            <tbody>\n                {solutions.map(solution => <tr key={solution.id}>\n                    <td>{(new Date(solution.timestamp)).toLocaleDateString()}</td>\n                    <td>\n                        {solution.status === 'ACE' ? <Icon icon=\"tick\" intent=\"success\" /> : <Icon icon=\"error\" intent=\"danger\" />}\n                        {\" \"}{statusMap[solution.status]}\n                    </td>\n                    <td>{solution.time} ms</td>\n                    <td>{Math.ceil(solution.memory / 1024)} KB</td>\n                    <td>{solution.language}</td>\n                    <td>{solution.author}</td>\n                </tr>)}\n            </tbody>\n        </table>}\n        <div className=\"aleoj-submission-notes\">only show last 10 submissions</div>\n    </div >\n}\n\nexport default Submission;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport './index.css';\n\nfunction Problems({ close, onChoose }) {\n    const [problems, setProblems] = useState([])\n    const history = useHistory();\n\n    const fetchData = async () => {\n        const result = await axios(\n            `${API_URL}/problems?page=1&per=1000`,\n        );\n        setProblems(result.data);\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return <table className=\"aleoj-problems-table bp3-html-table bp3-html-table-bordered bp3-interactive bp3-html-table-striped\">\n        <tbody>\n            {problems.data && problems.data.map(problem => <tr key={problem.id} onClick={() => {\n                history.push(`/problems/${problem.id}`)\n                onChoose(problem.id);\n                close();\n            }}>\n                <td className=\"id\">#{problem.id}</td>\n                <td>{problem.title}</td>\n                <td className=\"tag\">\n                    <span className=\"bp3-tag bp3-round bp3-intent-success bp3-minimal\">{problem.tag}</span>\n                </td>\n            </tr>)}\n        </tbody>\n    </table>\n}\n\nexport default Problems;","import React from 'react';\nimport { Dialog, Classes } from '@blueprintjs/core';\n\nimport './index.css';\n\nfunction About(props) {\n    return <Dialog\n        className=\"bp3-dark\"\n        icon=\"help\"\n        isOpen={props.show}\n        canOutsideClickClose={true}\n        onClose={() => props.toggle(false)}\n        title=\"About AleOJ\"\n    >\n        <div className={Classes.DIALOG_BODY}>\n            <p>\n                <strong>What?</strong>\n            </p>\n            <p>\n                An Free Online Judger that you could use to practice \"data structures and algorithms\".\n            </p>\n\n            <p>\n                <strong>Why?</strong>\n            </p>\n            <p>\n                Simple, fast and highly customizable, yet another hobby project.\n            </p>\n\n            <p>\n                <strong>How?</strong>\n            </p>\n            <p>\n                This project is built from scratch by <a href=\"http://liang.fi\" target=\"_blank\" rel=\"noreferrer\">liang.fi</a>. The frontend is written in \"React\" while the \"Judger core\" and \"backend\" is written in Go.\n\n                Available docker image for the <a href=\"https://hub.docker.com/repository/docker/liangular/aleoj\" target=\"_blank\" rel=\"noreferrer\">Judger Core</a>.\n            </p>\n        </div>\n    </Dialog>\n}\n\nexport default About;","import React from 'react';\nimport { Navbar, Alignment, Button } from '@blueprintjs/core';\n\nfunction Header(props) {\n    return <Navbar className=\"bp3-dark aleoj-navbar\">\n        <Navbar.Group align={Alignment.LEFT}>\n            <Navbar.Heading className=\"bp3-monospace-text\">ALEOJ</Navbar.Heading>\n        </Navbar.Group>\n        <Navbar.Group align={Alignment.RIGHT}>\n            <Navbar.Divider />\n            <Button className=\"bp3-minimal\" icon=\"help\" onClick={() => props.toggleAbout(true)} />\n        </Navbar.Group>\n    </Navbar>;\n}\n\nexport default Header;","import React from 'react';\nimport { Navbar, Alignment, Button } from '@blueprintjs/core';\n\nfunction Footer({ onProblemsClick, onSubmitClick, isSubmiting }) {\n    return <Navbar className=\"bp3-dark aleoj-footer\">\n        <Navbar.Group align={Alignment.LEFT}>\n            <Button className=\"bp3-button bp3-intent-success bp3-minimal\" icon=\"list-detail-view\" text=\"Problems\" onClick={onProblemsClick} />\n        </Navbar.Group>\n        <Navbar.Group align={Alignment.RIGHT}>\n            <Navbar.Divider />\n            <Button loading={isSubmiting} disabled={isSubmiting} className=\"bp3-button bp3-intent-success bp3-minimal\" icon=\"saved\" text=\"Submit\" onClick={onSubmitClick} />\n        </Navbar.Group>\n    </Navbar>;\n}\n\nexport default Footer;","import './index.css';\nimport React, { useState } from 'react'\nimport { Tabs, Tab, Drawer } from '@blueprintjs/core';\nimport Split from 'react-split';\nimport Editor from '../../components/aleoj/editor';\nimport Description from '../../components/aleoj/description';\nimport Submission from '../../components/aleoj/submission';\nimport Problems from '../../components/aleoj/problems';\nimport About from '../../components/aleoj/about';\nimport Header from '../../components/aleoj/header';\nimport Footer from '../../components/aleoj/footer';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_URL } from '../../config';\n\nconst defaultCodeTmp = `#include <iostream>\nusing namespace std;\n\nint main() {\n  return 0;\n}`;\n\nfunction AleojView(props) {\n    const [tabId, setTabId] = useState(\"des\");\n    const [showDrawer, toggleProblems] = useState(false);\n    const [showAbout, toggleAbout] = useState(false);\n    const [isSubmiting, setSubmiting] = useState(false);\n    const [result, setResult] = useState({});\n    const [code, setCode] = useState(defaultCodeTmp);\n    let { id } = useParams();\n    const problemId = id || 27;\n\n    const onProblemsClick = () => {\n        toggleProblems(true);\n    }\n    const onSubmitClick = async () => {\n        setSubmiting(true);\n        try {\n            const payload = {\n                problem_id: problemId,\n                language: 'c++',\n                author: 'guest',\n                code\n            };\n            const result = await axios.post(\n                `${API_URL}/solutions`,\n                payload\n            );\n            setResult(result.data);\n        } catch (e) {\n            const { error } = e.response.data;\n            setResult({\n                status: 'ERR',\n                error\n            });\n        } finally {\n            setTabId(\"sub\");\n            setSubmiting(false);\n        }\n    }\n\n    const onChooseProblem = (id) => {\n        if (parseInt(id) === parseInt(problemId)) {\n            return;\n        } else {\n            setTabId('des');\n            setCode(defaultCodeTmp);\n        }\n    }\n\n    return <div className=\"aleoj-container\">\n        <About toggle={toggleAbout} show={showAbout} />\n        <Header toggleAbout={toggleAbout} />\n        <Split className=\"split aleoj-main\" gutterSize={5} minSize={400}>\n            <div className=\"aleoj-preview\">\n                <Tabs\n                    renderActiveTabPanelOnly={true}\n                    animate={true}\n                    selectedTabId={tabId}\n                    onChange={(id) => setTabId(id)}\n                >\n                    <Tab id=\"des\" title=\"Description\" panel={<Description problemId={problemId} />} panelClassName=\"aleoj-preview-panel-description\" />\n                    <Tab id=\"sub\" title=\"Submissions\" panel={<Submission result={result} problemId={problemId} />} panelClassName=\"aleoj-preview-panel-submission\" />\n                </Tabs>\n            </div>\n            <div className=\"aleoj-editor\">\n                <Editor code={code} setCode={setCode} />\n            </div>\n        </Split>\n\n        <Footer onProblemsClick={onProblemsClick} onSubmitClick={onSubmitClick} isSubmiting={isSubmiting} />\n\n        <Drawer\n            className=\"aleoj-problems-drawer bp3-dark\"\n            isOpen={showDrawer}\n            position=\"left\"\n            canOutsideClickClose={true}\n            onClose={() => toggleProblems(false)}\n        >\n            <Problems close={() => toggleProblems(false)}  onChoose={onChooseProblem} />\n        </Drawer>\n    </div>;\n}\n\n\nexport default AleojView;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport AleojView from './views/Aleoj';\n\nclass App extends React.Component {\n  render() {\n    return <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <AleojView />\n        </Route>\n        <Route path=\"/problems/:id\">\n          <AleojView />\n        </Route>\n        <Route path=\"/solutions/:id\">\n          <h1>solutions</h1>\n        </Route>\n      </Switch>\n    </Router>\n\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}